<launch>

  <arg name="namespace" default="rexrov"/>
  <arg name="debug" default="0"/>

  <!-- <arg name="x" default="-1.2"/>
  <arg name="y" default="-0.5"/>
  <arg name="z" default="-1.4"/>

  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="0.0"/> -->

  <arg name="x" default="0"/>
  <arg name="y" default="-5"/>
  <arg name="z" default="-7"/>

  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="1.732"/>

  <arg name="use_ned_frame" default="false"/>

  <group ns="$(arg namespace)">

    <group if="$(arg use_ned_frame)">
      <param name="robot_description"
        command="$(find xacro)/xacro '$(find lias_ocean_sim)/urdf/rexrov_main.xacro' --inorder
          debug:=$(arg debug)
          namespace:=$(arg namespace)
          inertial_reference_frame:=world_ned" />
    </group>

    <group unless="$(arg use_ned_frame)">
      <param name="robot_description"
        command="$(find xacro)/xacro '$(find lias_ocean_sim)/urdf/rexrov_main.xacro' --inorder
          debug:=$(arg debug)
          namespace:=$(arg namespace)
          inertial_reference_frame:=world" />
    </group>

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -model $(arg namespace) -param /$(arg namespace)/robot_description"/>

    <!-- A joint state publisher plugin already is started with the model, no need to use the default joint state publisher -->

    <!-- Publish robot model for ROS -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen">
      <param name="robot_description" value="/$(arg namespace)/robot_description" />
      <param name="publish_frequency" value="5" />
    </node>
  </group>

  <include file="$(find uuv_assistants)/launch/message_to_tf.launch">
    <arg name="namespace" value="$(arg namespace)"/>
    <arg name="world_frame" value="world"/>
    <arg name="child_frame_id" value="/$(arg namespace)/base_link"/>
  </include>


  <include file="$(find uuv_control_cascaded_pid)/launch/key_board_velocity.launch">
      <arg name="uuv_name" value="rexrov"/>
      <arg name="model_name" value="rexrov"/>
  </include>

  <!-- <node name="rviz" pkg="rviz" type="rviz" 
          args="-d $(find sonar_cam_stereo)/config/config.rviz" 
          required="false" /> -->

</launch>
